version: '3.9'

services:
  pokemon-service:
    build:
      context: .
      dockerfile: ./devops/Dockerfile
    hostname: pokemon-service
    container_name: pokemon-service
    networks:
      - kong-net
    volumes:
      - ./src:/usr/src/app/src
    environment:
      - MONGO_DB_URL=mongodb://root:password@mongodb_pokemon:27017/pokemon?authSource=admin
      - NODE_ENV=development
    depends_on:
      - mongo
      - kong-api-gateway

  mongo:
    image: mongo:latest
    container_name: mongodb_pokemon
    restart: always
    networks:
      - kong-net
    ports:
      - 27017:27017
    volumes:
      - ./volumes/mongodbdata:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: pokemon

  mongo-seed:
    image: mongo:latest
    container_name: mongodb_pokemon_seed
    command: ./config/data/import.sh
    networks:
      - kong-net
    depends_on:
      - mongo
    volumes:
      - ./config/data:/config/data

  kong-api-gateway:
    image: '${KONG_DOCKER_TAG:-kong:latest}'
    hostname: kong-api-gateway
    container_name: kong-api-gateway
    environment:
      KONG_DATABASE: 'off'
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: '${KONG_ADMIN_LISTEN:-0.0.0.0:8001}'
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_LISTEN: '${KONG_PROXY_LISTEN:-0.0.0.0:8000}'
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_DECLARATIVE_CONFIG: '/opt/kong/kong.yaml'
    networks:
      - kong-net
    ports:
      # The following two environment variables default to an insecure value (0.0.0.0) according to the CIS Security test.
      - '${KONG_INBOUND_PROXY_LISTEN:-0.0.0.0}:8000:8000/tcp'
      - '${KONG_INBOUND_SSL_PROXY_LISTEN:-0.0.0.0}:8443:8443/tcp'
      - '127.0.0.1:8001:8001/tcp'
      - '127.0.0.1:8444:8444/tcp'
    healthcheck:
      test: ['CMD', 'kong', 'health']
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure:5
    volumes:
      - ./config/kong:/opt/kong
    security_opt:
      - no-new-privileges

  keycloak-iam:
    build:
      context: .
      dockerfile: ./devops/Keycloak.Dockerfile
    hostname: keycloak-iam
    container_name: keycloak-iam
    command: start-dev
    networks:
      - keycloak-net
    ports:
      - 9080:8080
      - 9443:8443
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: keycloakdbuser
      KC_DB_PASSWORD: keycloakdbsecret
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: keycloakpassword
    depends_on:
      - keycloak-db

  keycloak-db:
    image: postgres:latest
    restart: always
    hostname: keycloak-db
    container_name: keycloak-db
    networks:
      - keycloak-net
    ports:
      - 5432:5432
    volumes:
      - ./volumes/keycloakdbdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: keycloakdbuser
      POSTGRES_PASSWORD: keycloakdbsecret
      POSTGRES_DB: keycloak

networks:
  kong-net:
    external: false
    name: kong-net
  keycloak-net:
    external: false
    name: keycloak-net
